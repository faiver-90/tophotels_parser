import asyncio

from parce_screenshots_moduls.concurrent_runner import hotels_needing_retry, run_concurrent
from config_app import (
    HOTELS_IDS_FILE,
    SCREENSHOTS_DIR,
    MAX_ATTEMPTS_RUN,
    MAX_FIRST_RUN,
)

from parce_screenshots_moduls.utils import load_hotel_ids


async def run_create_report():
    hotel_ids_all = load_hotel_ids(HOTELS_IDS_FILE)

    for attempt in range(1, MAX_ATTEMPTS_RUN + 1):
        print(f"\nüåÄ Attempt {attempt} of {MAX_ATTEMPTS_RUN}")

        # –ù–∞ –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø–æ–ø—ã—Ç–∫–∞—Ö –¥–æ–∫–∏–¥—ã–≤–∞–µ–º –¢–û–õ–¨–ö–û —Ç–µ ID, –≥–¥–µ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –∫–∞—Ä—Ç–∏–Ω–æ–∫
        ids_for_run = (
            hotel_ids_all
            if attempt == 1
            else hotels_needing_retry(SCREENSHOTS_DIR, hotel_ids_all)
        )
        if not ids_for_run:
            print("‚úÖ –í—Å—ë —É–∂–µ —Å–æ–±—Ä–∞–Ω–æ.")
            break

        await run_concurrent(ids_for_run)

        if attempt >= MAX_FIRST_RUN:
            # –ü–æ—Å–ª–µ –Ω—É–∂–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫—Ä—É–≥–æ–≤ ‚Äî –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ—â—ë —Ä–∞–∑
            left = hotels_needing_retry(
                SCREENSHOTS_DIR, hotel_ids_all
            )
            if not left:
                print("‚úÖ All folders contain at least 8 images.")
                break
        else:
            print("‚ö† –ï—â—ë –æ–¥–∏–Ω –∫—Ä—É–≥‚Ä¶")
            await asyncio.sleep(1)
    else:
        print("‚ùå Max attempts reached. Some folders still have less than 8 images.")
